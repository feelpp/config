#!/usr/bin/env bash
t(){ type "$1"&>/dev/null;}

# Determine dialog box program
while :
do
   t whiptail && DIALOG=whiptail && break
   t dialog && DIALOG=dialog && DIALOG_ESC=-- && break
   t tcdialog && DIALOG=tcdialog && DIALOG_ESC=-- && break
   exec date +s"Dialog or whiptail must be installed!"
done;

# full path to dirs and modules
moddirs=$(find modules/files/src -type d)
mods=$(find modules/files/src -type f)

# Return modlist variable
for i in $mods
do
    modbase=$(basename $(dirname $i))
    modlist="$modlist\"\" $modbase/$(basename $i) \"\" "
done

#--------------------------------------------------------------------------------
# FUNCTIONS
#--------------------------------------------------------------------------------

# Return HPCNAME variable
function Menu.Hostname
{
    if [ ! -f "./etc/hpcname" ]
    then
        HPCNAME=$( $DIALOG \
                   --title "Modules HPC name" \
                   --inputbox "Set cluster front-end hostname" \
                   0 0 \
                   $HOSTNAME \
                   $DIALOG_ESC "$@" \
                   3>&1 1>&2 2>&3 );
        echo "HPCNAME=$HPCNAME" > ./etc/hpcname
        mkdir -p ./modules/files/$HPCNAME
    else
        $DIALOG --title "Confirm" \
                --yesno \
                " A previous HPCNAME has been found !\nDo you want to reconfigure the HPC name ?" \
                0 0 \
                $DIALOG_ESC "$@"

        case $? in
           0) rm ./etc/hpcname
              Menu.Hostname ;;
           *) ;; # Exit
        esac
    fi
}



function Menu.Modules
{
    if [ ! -f "./etc/hpcname" ]
    then
        $DIALOG --title "Confirm" \
                --yesno \
                "Set the HPCNAME first" \
                0 0 \
                $DIALOG_ESC "$@"
        case $? in
           0) Menu.Hostname ;;
           *) ;; # Exit
        esac
    else
        source ./etc/hpcname
        selectmods=$( $DIALOG \
             --title "HPC frontal hostname" \
             --checklist "Select modules to install:" 0 0 \
             $modlist \
             $HOSTNAME $DIALOG_ESC "$@" \
             3>&1 1>&2 2>&3 );

        # Create symlinks
        for istr in $selectmods
        do
            inoquotes=${istr:1:${#istr}-2}
            mkdir -p ./modules/files/$HPCNAME/$(dirname $inoquotes)
            ln -s ../../src/$inoquotes  \
                  ./modules/files/$HPCNAME/$inoquotes
        done
    fi
}

function Menu.Show
{
    menuchoice=$( $DIALOG \
                   --title "Menu" \
                   --ok-button "select" \
                   --cancel-button "exit" \
                   --menu "Cluster module configuration (Experimental)" 20 40 0\
                   1 "Hpcname" \
                   2 "Modules" \
                   $DIALOG_ESC "$@" \
                   3>&1 1>&2 2>&3 );
}

#--------------------------------------------------------------------------------
# Main
#--------------------------------------------------------------------------------

run=true
while($run)
do
    Menu.Show
    case  $menuchoice in
      1) Menu.Hostname;;
      2) Menu.Modules;;
      *) run=false # exit
    esac
done
